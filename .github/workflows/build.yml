name: Build Chart

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-helm-chart:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.10.0
      - id: "configure-git"
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2
      - name: Run chart-testing (lint)
        run: ct lint --target-branch ${{ github.event.repository.default_branch }}
      - name: Create kind cluster
        uses: helm/kind-action@v1.12.0
      - name: Install clickhouse operator and cluster
        run: |
          helm repo add clickhouse-operator https://docs.altinity.com/clickhouse-operator/
          helm repo add altinity https://helm.altinity.com
          helm repo add cnpg https://cloudnative-pg.github.io/charts
          helm repo update
          helm install clickhouse-operator clickhouse-operator/altinity-clickhouse-operator --namespace clickhouse --create-namespace --wait
          helm install clickhouse altinity/clickhouse --namespace clickhouse --create-namespace --set operator.enable=false --wait
          helm install cnpg --namespace cnpg-system --create-namespace cnpg/cloudnative-pg --wait
          helm install database --namespace database --create-namespace cnpg/cluster --set cluster.initdb.owner=foo --wait
      - run: echo "POSTGRESQL_PASSWORD=$(kubectl get secret -n database database-cluster-app -o jsonpath="{.data.password}" | base64 --decode)" >> $GITHUB_ENV
      - run: kubectl wait --for=jsonpath='{.status.status}'=Completed chi -n clickhouse clickhouse --timeout=500s 
      - run: kubectl get svc -n clickhouse 
      - run: kubectl get pods -n clickhouse
#      - run: kubectl wait --for=condition=Ready pod -n clickhouse -l clickhouse.altinity.com/chi=clickhouse --timeout=300s
      - name: Run chart-testing (install)
        run: ct install --chart-dirs chart/ --charts chart/ --debug --helm-extra-set-args "--set=databaseURL=postgres://foo:${{ env.POSTGRESQL_PASSWORD }}@database-cluster-rw.database.svc.cluster.local:5432/plausible_db --set=clickhouseDatabaseURL=http://foo:bar@clickhouse-clickhouse.svc.cluster.local:8123/plausible_events_db"
